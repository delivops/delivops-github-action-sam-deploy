name: 'delivops-github-action-sam-deploy'
description: 'Sam deploy'
author: 'delivops'
branding:
  icon: 'cloud'
  color: 'pink'
inputs:
  aws_region:
    description: "AWS Region"
    required: true
    type: string
  aws_account_id:
    description: "AWS Account ID"
    required: true
    type: string    
  aws_role:
    description: 'aws role name'
    required: true  
  dockerfile_path:
    description: "Path to Dockerfile"
    required: true
    type: string
  sam_config_path:
    description: "SAM config file path"
    required: true
    type: string
  stack_name:
    description: "Stack Name"
    required: true
    type: string
  sam_template_path:
    description: "Template file path"
    required: true
    type: string
  github_token:
    description: "GitHub token for PR comments"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role}}"
        aws-region: ${{ inputs.aws_region }}
    - name: Deploy stack using SAM
      shell: bash
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ${{ github.workspace }}
      run: |
        sam deploy \
          --config-file "${{ github.workspace }}/${{ inputs.sam_config_path }}" \
          --stack-name ${{ inputs.stack_name }} \
          --config-env default \
          --template-file ${{ inputs.sam_template_path }} \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --region ${{ inputs.aws_region }} \
          --tags stack_name=${{ inputs.stack_name }} sam=true
    - name: Dry-deploy and capture changeset
      shell: bash
      if: github.event_name == 'pull_request'
      working-directory: ${{ github.workspace }}
      run: |
        # Create the changeset and save the ID
        CHANGESET_ID=$(sam deploy \
          --config-file "${{ github.workspace }}/${{ inputs.sam_config_path }}" \
          --stack-name ${{ inputs.stack_name }} \
          --config-env default \
          --template-file ${{ inputs.sam_template_path }} \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --no-execute-changeset \
          --region ${{ inputs.aws_region }} \
          --tags stack_name=${{ inputs.stack_name }} sam=true \
          | grep -o 'arn:aws:cloudformation:[^:]*:[^:]*:changeSet/[a-zA-Z0-9-]*/[a-zA-Z0-9-]*' || echo "")
        
        if [ -n "$CHANGESET_ID" ]; then
          echo "CHANGESET_ID=$CHANGESET_ID" >> $GITHUB_ENV
          # Describe the changeset to get changes
          aws cloudformation describe-change-set \
            --change-set-name "$CHANGESET_ID" \
            --region ${{ inputs.aws_region }} > changeset_details.json
            
          # Format the changeset details for the PR comment
          echo "## SAM Deployment Plan" > changeset_summary.md
          echo "The following changes will be applied:" >> changeset_summary.md
          echo '```' >> changeset_summary.md
          
          jq -r '.Changes[] | "Action: " + .ResourceChange.Action + 
                "\nLogical ID: " + .ResourceChange.LogicalResourceId + 
                "\nResource Type: " + .ResourceChange.ResourceType + 
                if .ResourceChange.Replacement == "True" then "\nReplacement: Required" else "" end +
                "\n---"' changeset_details.json >> changeset_summary.md
          
          echo '```' >> changeset_summary.md
          
          # Save the summary to be used in the PR comment
          cat changeset_summary.md > $GITHUB_WORKSPACE/changeset_summary.md
        else
          echo "## SAM Deployment Plan" > $GITHUB_WORKSPACE/changeset_summary.md
          echo "No changes detected in this deployment." >> $GITHUB_WORKSPACE/changeset_summary.md
        fi
    - name: Comment on PR with changeset details
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const fs = require('fs');
          const changesetSummary = fs.readFileSync('changeset_summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: changesetSummary
          });
    - name: Print deployment outputs
      shell: bash
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        aws cloudformation describe-stacks \
          --stack-name ${{ inputs.stack_name }} \
          --region ${{ inputs.aws_region }}
